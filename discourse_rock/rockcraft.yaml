# Copyright 2025 Canonical Ltd.
# See LICENSE file for licensing details.

name: discourse
summary: Discourse rock
description: Discourse OCI image for the Discourse charm
base: ubuntu@22.04
# renovate: base: ubuntu:22.04@sha256:ed1544e454989078f5dec1bfdabd8c5cc9c48e0705d07b678ab6ae3fb61952d2
run-user: _daemon_  # UID/GID 584792
license: Apache-2.0
version: "1.0"
platforms:
  amd64:
parts:
  tooling:
    plugin: nil
    overlay-packages:
      - brotli
      - g++
      - gcc
      - gettext-base
      - gifsicle
      - git
      - jhead
      - jpegoptim
      - libjpeg-turbo-progs
      - libpq-dev
      - libssl-dev
      - libxml2-dev
      - libxslt1-dev
      - libyaml-dev
      - libz-dev
      - optipng
      - pngquant
      - postgresql-client
      - postgresql-client-common
      - redis-tools
      - tzdata
      - ubuntu-dev-tools
      - zlib1g-dev
    build-environment:
      - ARCH: "x64"
      - NODE_VERSION: "18.18.2"
      - RAILS_ENV: "production"
      - RUBY_INSTALL_VERSION: "0.9.3"
      - RUBY_VERSION: "3.2.6"
      - YARN_VERSION: "1.22.19"
    override-build: |
      node_uri="https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-${ARCH}.tar.gz"
      curl -Ls $node_uri | tar xzf - -C $CRAFT_OVERLAY/ --skip-old-files --no-same-owner --strip-components=1
      yarn_uri="https://github.com/yarnpkg/yarn/releases/download/v${YARN_VERSION}/yarn-v${YARN_VERSION}.tar.gz"
      curl -Ls $yarn_uri | tar xzf - -C $CRAFT_OVERLAY/ --skip-old-files --no-same-owner --strip-components=1
      $CRAFT_OVERLAY/usr/bin/node $CRAFT_OVERLAY/usr/bin/npm install --verbose --prefix $CRAFT_OVERLAY/usr/local/ --global terser
      $CRAFT_OVERLAY/usr/bin/node $CRAFT_OVERLAY/usr/bin/npm install --verbose --prefix $CRAFT_OVERLAY/usr/local/ --global svgo
      ruby_install_uri="https://github.com/postmodern/ruby-install/releases/download/v${RUBY_INSTALL_VERSION}/ruby-install-${RUBY_INSTALL_VERSION}.tar.gz"
      curl -fLO $ruby_install_uri
      tar -xzvf ruby-install-${RUBY_INSTALL_VERSION}.tar.gz
      cd ruby-install-${RUBY_INSTALL_VERSION}/
      make install
      ruby-install --system ruby $RUBY_VERSION
      cp -pR /usr/local/ ${CRAFT_OVERLAY}/usr/
  discourse:
    after: [tooling]
    plugin: dump
    source: https://github.com/discourse/discourse.git
    source-depth: 1
    source-tag: v3.3.0
    source-type: git
    override-build: |
      craftctl default
      mkdir -p log
      mkdir -p public/backups/default
      mkdir -p public/uploads/default
      mkdir -p srv/discourse/app/bin
      mkdir -p srv/discourse/app/vendor/bundle
      mkdir -p tmp/backups/default
      touch log/production.log
      touch log/unicorn-stderr.log
    organize:
      "*.*": srv/discourse/app/
      "*": srv/discourse/app/
      ".*": srv/discourse/app/
  bundler-config:
    plugin: dump
    after: [discourse]
    source: bundler
    organize:
      "*": srv/discourse/app/.bundle/
  discourse-solved:
    plugin: dump
    after: [discourse, bundler-config]
    source: https://github.com/discourse/discourse-solved.git
    source-commit: dc1ef92be23332a54854751a23b9029463584845
    source-depth: 1
    organize:
      "*": srv/discourse/app/plugins/discourse-solved/
  discourse-markdown-note:
    plugin: dump
    after: [discourse, bundler-config]
    source: https://github.com/canonical-web-and-design/discourse-markdown-note.git
    source-commit: a0d7276360db732c2252507e207ebadd2ffc9fbe
    source-depth: 1
    organize:
      "*": srv/discourse/app/plugins/markdown-note/
  discourse-mermaid-theme-component:
    plugin: dump
    after: [discourse, bundler-config]
    source: https://github.com/discourse/discourse-mermaid-theme-component.git
    source-commit: 5c435f02551fa4c1ddc41844865091d2f1c3b2d1
    source-depth: 1
    organize:
      "*": srv/discourse/app/plugins/discourse-mermaid-theme-component/
  discourse-saml:
    plugin: dump
    after: [discourse, bundler-config]
    source: https://github.com/discourse/discourse-saml.git
    source-commit: d59be6e624a530d16d03ae7d6da2f14dd526267c
    source-depth: 1
    override-build: |
      craftctl default
      grep -e ^gem plugin.rb >> Gemfile
    organize:
      "*": srv/discourse/app/plugins/discourse-saml/
  discourse-prometheus:
    plugin: dump
    after: [discourse, bundler-config]
    source: https://github.com/discourse/discourse-prometheus.git
    source-commit: b1b899ca995783ef5eba90c35dbfc120a2949c38
    source-depth: 1
    override-build: |
      craftctl default
      grep -e ^gem plugin.rb >> Gemfile
    organize:
      "*": srv/discourse/app/plugins/discourse-prometheus/
  discourse-data-explorer:
    plugin: dump
    after: [discourse, bundler-config]
    source: https://github.com/discourse/discourse-data-explorer.git
    source-commit: 2d0dc39767f0c68d333f113c550731a5546c3137
    source-depth: 1
    organize:
      "*": srv/discourse/app/plugins/discourse-data-explorer/
  discourse-templates:
    plugin: dump
    after: [discourse, bundler-config]
    source: https://github.com/discourse/discourse-templates.git
    source-commit: 2cacb5e5d33d447191e80a29c01973f84c40dc83
    source-depth: 1
    organize:
      "*": srv/discourse/app/plugins/discourse-templates/
  discourse-calendar:
    plugin: dump
    after: [discourse, bundler-config]
    source: https://github.com/discourse/discourse-calendar.git
    source-commit: 908ad614bc412f831f929ca726a4bda0b9ccaab6
    source-depth: 1
    organize:
      "*": srv/discourse/app/plugins/discourse-calendar/
  discourse-gamification:
    plugin: dump
    after: [discourse, bundler-config]
    source: https://github.com/discourse/discourse-gamification.git
    source-commit: 4abb818a6b511878885bb594593dd35e76e1fc08
    source-depth: 1
    organize:
      "*": srv/discourse/app/plugins/discourse-gamification/
  discourse-chat-integration:
    plugin: dump
    after: [discourse, bundler-config]
    source: https://github.com/discourse/discourse-chat-integration.git
    source-commit: e19808d4ad3f7d16cd9b93f315ca586f694e6288
    source-depth: 1
    organize:
      "*": srv/discourse/app/plugins/discourse-chat-integration/
  patches:
    plugin: dump
    after: [discourse]
    source: patches
    organize:
      "*": srv/discourse/app/patches/
  apply-patches:
    plugin: nil
    build-packages:
      - git
    after: [discourse, patches]
    override-stage: |
      git -C srv/discourse/app apply patches/db_migrations.patch
      git -C srv/discourse/app apply patches/lp1903695.patch
      git -C srv/discourse/app apply patches/discourse-charm.patch
      git -C srv/discourse/app apply patches/sigterm.patch
      # The following is a fix for UglifierJS assets compilation
      # https://github.com/lautis/uglifier/issues/127#issuecomment-352224986
      sed -i 's/config.assets.js_compressor = :uglifier/config.assets.js_compressor = Uglifier.new(:harmony => true)/g' srv/discourse/app/config/environments/production.rb
      sed -i '1s/^/require "uglifier"\n/' srv/discourse/app/config/environments/production.rb
    prime:
      - srv/discourse/app/lib/tasks/discourse-charm.rake
  scripts:
    plugin: dump
    source: scripts
    organize:
      "*": srv/scripts/
  setup:
    plugin: nil
    after:
      - apply-patches
      - bundler-config
      - discourse
      - discourse-calendar
      - discourse-data-explorer
      - discourse-gamification
      - discourse-markdown-note
      - discourse-mermaid-theme-component
      - discourse-prometheus
      - discourse-saml
      - discourse-solved
      - discourse-templates
      - discourse-chat-integration
      - patches
      - scripts
      - tooling
    build-packages:
      - git
      - libpq-dev
      - libssl-dev
    override-prime: |
      cd srv/discourse/app
      gem install -n "bin" bundler -v 2.5.3
      bin/bundle install
      bin/bundle install --gemfile="plugins/discourse-calendar/Gemfile"
      bin/bundle install --gemfile="plugins/discourse-data-explorer/Gemfile"
      bin/bundle install --gemfile="plugins/discourse-gamification/Gemfile"
      bin/bundle install --gemfile="plugins/discourse-prometheus/Gemfile"
      bin/bundle install --gemfile="plugins/discourse-saml/Gemfile"
      bin/bundle install --gemfile="plugins/discourse-solved/Gemfile"
      bin/bundle install --gemfile="plugins/discourse-templates/Gemfile"
      bin/bundle install --gemfile="plugins/discourse-chat-integration/Gemfile"
      yarn install --immutable
  discourse-precompile-assets:
    plugin: nil
    after: [apply-patches, setup]
    build-packages:
      - redis-tools
      - postgresql-all
      - postgresql-client
    build-snaps:
      - redis
    override-prime: |
      systemctl start postgresql
      cd srv/discourse/app
      su - postgres -c "psql -c \"CREATE DATABASE discourse;\"" || echo "Could not create database, maybe it already exists."
      su - postgres -c "psql -c \"CREATE USER discourse WITH PASSWORD 'discourse';\"" || echo "Could not create user, maybe it already exists."
      su - postgres -c "psql -c \"GRANT ALL PRIVILEGES ON DATABASE discourse TO discourse;\""
      PATH=$PATH:${CRAFT_PRIME}/usr/bin:${CRAFT_PRIME}/usr/local/bin RAILS_ENV=production DISCOURSE_DB_HOST=127.0.0.1 DISCOURSE_DB_PASSWORD=discourse bundle exec rake assets:precompile
      # Fix the symbolic links.
      find . -lname "${CRAFT_PRIME}/srv/discourse/*" -exec bash -c 'ln -snf "$(readlink "$1" | sed "s~${CRAFT_PRIME}~~")" "$1" ' sh {} \;
  perms:
    plugin: nil
    after: [tooling, discourse, setup, discourse-precompile-assets]
    override-prime: |
      chown -R 584792:584792 srv/discourse
      chown -R 584792:584792 srv/scripts
      mkdir -p var/lib/pebble/default/.cache
      mkdir -p var/lib/pebble/default/.config
      mkdir -p var/lib/pebble/default/.local
      mkdir -p var/lib/pebble/default/.npm
      mkdir -p var/lib/pebble/default/.yarn
      touch var/lib/pebble/default/.yarnrc
      chown -R 584792:584792 var/lib/pebble/default/.cache
      chown -R 584792:584792 var/lib/pebble/default/.config
      chown -R 584792:584792 var/lib/pebble/default/.local
      chown -R 584792:584792 var/lib/pebble/default/.npm
      chown -R 584792:584792 var/lib/pebble/default/.yarn
      chown    584792:584792 var/lib/pebble/default/.yarnrc
  imagemagick:
    plugin: autotools
    source: https://github.com/ImageMagick/ImageMagick.git
    source-type: git
    source-tag: 7.1.1-36
    build-packages:
      - git
      - make
      - gcc
      - pkg-config
      - autoconf
      - curl
      - g++
      - yasm
      - cmake
      - libde265-0
      - libde265-dev
      - libjpeg-turbo8
      - libjpeg-turbo8-dev
      - libwebp7
      - x265
      - libx265-dev
      - libtool
      - libpng16-16
      - libpng-dev
      - libwebp-dev
      - libgomp1
      - libwebpmux3
      - libwebpdemux2
      - ghostscript
      - libxml2-dev
      - libxml2-utils
      - librsvg2-dev
      - libltdl-dev
      - libbz2-dev
      - gsfonts
      - libtiff-dev
      - libfreetype6-dev
      - libjpeg-dev
      - libheif1
      - libheif-dev
      - libaom-dev
    stage-packages:
      - libjpeg-turbo8
      - x265
      - libtool
      - libpng16-16
      - libgomp1
      - libwebpmux3
      - libwebpdemux2
      - ghostscript
      - libxml2-utils
      - librsvg2-dev
      - libltdl-dev
      - gsfonts
      - libheif1
    override-build: |
      craftctl default

      export CFLAGS='-O2'

      ./configure \
                --prefix=/usr \
                --enable-static \
                --enable-bounds-checking \
                --enable-hdri \
                --enable-hugepages \
                --with-threads \
                --with-modules \
                --with-quantum-depth=16 \
                --without-magick-plus-plus \
                --with-bzlib \
                --with-zlib \
                --without-autotrace \
                --with-freetype \
                --with-jpeg \
                --without-lcms \
                --with-lzma \
                --with-png \
                --with-tiff \
                --with-heic \
                --with-rsvg \
                --with-webp
      make all -j"$(nproc)" && make install DESTDIR=$CRAFT_PART_INSTALL
      ldconfig $CRAFT_PART_INSTALL/usr/lib

      # Validate ImageMagick install
      test $($CRAFT_PART_INSTALL/usr/bin/magick -version | grep -o -e png -e tiff -e jpeg -e freetype -e heic -e webp | wc -l) -eq 6
checks:
  discourse-setup-completed:
    override: replace
    level: ready
    threshold: 1
    exec:
      command: ls /run/discourse-k8s-operator/setup_completed
