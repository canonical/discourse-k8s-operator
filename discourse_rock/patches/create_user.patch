--- a/lib/tasks/users.rake
+++ b/lib/tasks/users.rake
@@ -210,3 +210,12 @@ def find_user(username)
 
   user
 end
+
+desc "Create the user for given credentials"
+task "user:create" => :environment do
+  require "highline/import"
+
+  begin
+    email = ask("Email:  ")
+    existing_user = User.find_by_email(email)
+
+    # check if user account already exists
+    if existing_user
+      # user already exists, ask for password reset
+      new_user = existing_user
+      reset_password =
+        ask(
+          "User with this email already exists! Do you want to reset the password for this email? (Y/n)  ",
+        )
+      if (reset_password == "" || reset_password.downcase == "y")
+        begin
+          password = ask("Password:  ") { |q| q.echo = false }
+          password_confirmation = ask("Repeat password:  ") { |q| q.echo = false }
+          passwords_match = password == password_confirmation
+
+          say("Passwords don't match, try again...") unless passwords_match
+        end while !passwords_match
+        new_user.password = password
+      end
+    else
+      # create new user
+      new_user = User.new
+      new_user.email = email
+      new_user.username = UserNameSuggester.suggest(new_user.email)
+      begin
+        if ENV["RANDOM_PASSWORD"] == "1"
+          password = password_confirmation = SecureRandom.hex
+        else
+          password = ask("Password:  ") { |q| q.echo = false }
+          password_confirmation = ask("Repeat password:  ") { |q| q.echo = false }
+        end
+
+        passwords_match = password == password_confirmation
+
+        say("Passwords don't match, try again...") unless passwords_match
+      end while !passwords_match
+      new_user.password = password
+    end
+
+    new_user.name = ask("Full name:  ") if SiteSetting.full_name_required && new_user.name.blank?
+
+    # save/update user account
+    saved = new_user.save
+    say(new_user.errors.full_messages.join("\n")) unless saved
+  end while !saved
+
+  say "\nEnsuring account is active!"
+  new_user.active = true
+  new_user.save
+
+  if existing_user
+    say("\nAccount updated successfully!")
+  else
+    say("\nAccount created successfully with username #{new_user.username}")
+  end
+end
