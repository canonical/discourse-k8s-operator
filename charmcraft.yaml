# Copyright 2025 Canonical Ltd.
# See LICENSE file for licensing details.
name: discourse-k8s
display-name: Discourse
summary: Discourse is the modern forum for your community.
description: |
  A [Juju](https://juju.is/) [charm](https://juju.is/docs/olm/charmed-operators)
  deploying and managing [Discourse](https://www.discourse.org/) on Kubernetes.
  Discourse is the 100% open source discussion platform. Use it as a mailing list,
  discussion forum or long-form chat room.

  This charm simplifies initial deployment and "day N" operations of Discourse
  on Kubernetes, such as scaling the number of instances, integration with SSO,
  access to S3 for redundant file storage and more. It allows for deployment on
  many different Kubernetes platforms, from [MicroK8s](https://microk8s.io) or
  [Charmed Kubernetes](https://ubuntu.com/kubernetes) and public cloud Kubernetes
  offerings.

  As such, the charm makes it easy for those looking to take control of their own
  discussion platform whilst keeping operations simple, and gives them the
  freedom to deploy on the Kubernetes platform of their choice.

  For DevOps or SRE teams this charm will make operating Discourse simple and
  straightforward through Juju's clean interface. It will allow easy deployment
  into multiple environments for testing of changes, and supports scaling out for
  enterprise deployments.
docs: https://discourse.charmhub.io/t/discourse-documentation-overview/3773
maintainers:
  - https://launchpad.net/~canonical-is-devops
issues: https://github.com/canonical/discourse-k8s-operator/issues
source: https://github.com/canonical/discourse-k8s-operator
tags:
  - applications
  - forum

provides:
  metrics-endpoint:
    interface: prometheus_scrape
  grafana-dashboard:
    interface: grafana_dashboard

requires:
  redis:
    interface: redis
    limit: 1
  database:
    interface: postgresql_client
    limit: 1
  nginx-route:
    interface: nginx-route
    limit: 1
  logging:
    interface: loki_push_api
  saml:
    interface: saml
    limit: 1
    optional: true
assumes:
  - k8s-api

peers:
  restart:
    interface: rolling_op

containers:
  discourse:
    resource: discourse-image

resources:
  discourse-image:
    type: oci-image
    description: OCI image for discourse
type: "charm"
bases:
  - build-on:
    - name: "ubuntu"
      channel: "20.04"
    run-on:
    - name: "ubuntu"
      channel: "20.04"
parts:
  charm:
    build-packages: [cargo, rustc, pkg-config, libffi-dev, libssl-dev]
    charm-python-packages: [setuptools, pip]  # https://discourse.charmhub.io/t/install-or-update-python-packages-before-packing-a-charm/5158
    charm-binary-python-packages: [cosl]  # https://github.com/canonical/charmcraft/issues/1269
options:
  augment_cors_origin:
    type: boolean
    description: |
      Appends external_hostname (with http/https) and s3_cdn_url to the list of
      allowed CORS origins. Has no effect if 'cors_origin' is "*". 
      To rely only on automatic cors origins, set 'cors_origin' to an empty string.
    default: true
  cors_origin:
    type: string
    description: |
      Comma-separated list of allowed CORS origins. Defaults to "*", allowing all
      origins. To restrict access, provide specific origins or set to an empty string
      to rely solely on 'augment_cors_origin' if enabled.
    default: ""
  developer_emails:
    type: string
    description: "Comma delimited list of email addresses that should have developer level access."
    default: ""
  enable_cors:
    type: boolean
    description: "Enable Cross-origin Resource Sharing (CORS) at the application level (required for SSO)."
    default: true
  external_hostname:
    type: string
    description: "External hostname this discourse instance responds to. Defaults to application name."
    default: ""
  force_https:
    type: boolean
    description: Configure Discourse to use https.
    default: false
  force_saml_login:
    type: boolean
    description: "Force SAML login (full screen, no local database logins)."
    default: false
  max_category_nesting:
    type: int
    description: "Maximum category nesting allowed. Minimum is 2, maximum is 3."
    default: 2
  saml_sync_groups:
    type: string
    description: "Comma-separated list of groups to sync from SAML provider."
    default: ""
  smtp_address:
    type: string
    description: "Hostname / IP that should be used to send SMTP mail."
    default: ""
  smtp_authentication:
    type: string
    description: "Type of smtp authentication to use. Valid values: none, login, plain, cram_md5."
    default: "none"
  smtp_domain:
    type: string
    description: "Hostname that email sent by this discourse should appear to come from."
    default: ""
  smtp_enable_start_tls:
    type: string
    description: "Enable TLS encryption for smtp connections."
    default: "true"
  smtp_force_tls:
    type: string
    description: "Force implicit TLS as per RFC 8314 3.3."
    default: "false"
  smtp_openssl_verify_mode:
    type: string
    description: "Should discourse verify SSL certs."
    default: "none"
  smtp_password:
    type: string
    description: "Password to use when sending mail via SMTP."
    default: ""
  smtp_port:
    type: int
    description: "Port to use when connecting to SMTP server."
    default: 587
  smtp_username:
    type: string
    description: "Username to use when sending mail via SMTP."
    default: ""
  s3_access_key_id:
    type: string
    description: |
      The S3 access key ID to use.

      Sets DISCOURSE_S3_ACCESS_KEY_ID.
      Required if s3_enabled is true.
    default: ""
  s3_backup_bucket:
    type: string
    description: |
      The S3 bucket to use for backups.

      Sets DISCOURSE_S3_BACKUP_BUCKET.
      Also sets DISCOURSE_BACKUP_LOCATION=s3.
    default: ""
  s3_bucket:
    type: string
    description: |
      The S3 bucket to use.

      Sets DISCOURSE_S3_BUCKET.
      Required if s3_enabled is true.
    default: ""
  s3_cdn_url:
    type: string
    description: |
      The S3 Content Delivery Network URL.

      Sets DISCOURSE_S3_CDN_URL.
    default: ""
  s3_enabled:
    type: boolean
    description: |
      Store uploaded objects in an S3-compatible object storage service instead of a local directory.

      If true, sets DISCOURSE_USE_S3=true.
      Check https://meta.discourse.org/t/using-object-storage-for-uploads-s3-clones/148916 for more details.
    default: false
  s3_endpoint:
    type: string
    description: |
      The S3 endpoint to use.  This may be a non-Amazon S3-compatible endpoint.

      Sets DISCOURSE_S3_ENDPOINT
    default: "https://s3.amazonaws.com"
  s3_region:
    type: string
    description: |
      The S3 region to use.

      Sets DISCOURSE_S3_REGION.
      Required if s3_enabled is true.
    default: ""
  s3_secret_access_key:
    type: string
    description: |
      The S3 secret key to use.

      Sets DISCOURSE_S3_SECRET_ACCESS_KEY.
      Required if s3_enabled is true.
    default: ""
  s3_install_cors_rule:
    type: boolean
    description: |
      Will discourse set cors rule on the S3 bucket.

      Sets DISCOURSE_S3_INSTALL_CORS_RULE
    default: true
  throttle_level:
    type: string
    description: "Throttle level - blocks excessive usage by ip. Accepted values: none, permissive, strict."
    default: none
  sidekiq_max_memory:
    description: Maximum memory for sidekiq in megabytes. This configuration
      will set the UNICORN_SIDEKIQ_MAX_RSS environment variable.
    type: int
    default: 1000
actions:
  anonymize-user:
    description: Anonymize a user.
    params:
      username:
        type: string
        description: The unique identifier of the user to anonymize.
    required: [username]
  create-user:
    description: Create a new user.
    params:
      email:
        type: string
        description: User email.
      admin:
        type: boolean
        description: Whether the user should be an admin.
      active:
        type: boolean
        description: Whether the user should be email-verified and active.
        default: true
    required: [email]
  promote-user:
    description: Promote a user to admin.
    params:
      email:
        type: string
        description: User email.
    required: [email]
